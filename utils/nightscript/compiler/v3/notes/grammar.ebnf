(* NightScript Version 3 Reference Grammar *)

module = { include }, { stmt }, EOF ;

include = "include", expr_primary_str, ";" ;

stmt = (
	stmt_block | stmt_if | stmt_while | stmt_do | stmt_menu | stmt_option |
	stmt_break | stmt_continue | stmt_expr
) ;

stmt_block = "{", { stmt }, "}" ;
stmt_if = "if", expr_paren, stmt, [ "else", stmt ] ;
stmt_while = "while", expr_paren, stmt ;
stmt_do = "do", stmt, "while", expr_paren, ";" ;
stmt_menu = "menu", stmt ;
stmt_option = "option", expr_paren, stmt ;
stmt_break = "break", ";" ;
stmt_continue = "continue", ";" ;
stmt_expr = expr, ";" ;

expr_paren = "(", expr, ")" ;
expr = expr_call ;

expr_call = expr_primary, { "(", [ expr, { ",", expr } ], ")" } ;
expr_primary = expr_paren | expr_primary_str | expr_primary_identifier ;

expr_primary_str = LITERAL_STR ;
expr_primary_identifier = IDENTIFIER ;
