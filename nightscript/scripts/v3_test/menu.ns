# NightScript Version 3.
# Flag Test
# Test for constants and variables in menus.

func test_eq(test_name, test, control){
	if test == control {
		say(format("Test `{0}` passed! ({1}.)", test_name, control));
	} else {
		say(format("Test `{0}` failed!\nExpected {1}, got {2}.", test_name, control, test));
	}
}

freeze();
show();

var var_a = 100;
var var_b = 200;
var var_c = 300;

test_eq("pre_var_a", var_a, 100);
test_eq("pre_var_b", var_b, 200);
test_eq("pre_var_c", var_c, 300);

menu {
	const MAX = 10;
	const MAGIC = 5;
	
	var dummy_foo = 0xf00;
	var counter = 0;
	var dummy_bar = 0xbaa;
	
	while counter < MAX {
		counter = counter + 1;
		
		if counter == MAGIC {
			var dummy_baz = 54321;
			var mul_counter = counter * MAX; # Should be 50.
			var dummy_qux = 12345;
			
			option "Fail test" {
				var dummy_a = 111;
				var dummy_b = 222;
				var dummy_c = 333;
				
				test_eq("test_failer_a", 1, 0);
			}
			
			var dummy_d = 444;
			var dummy_e = 555;
			
			option "Run test" {
				var var_d = 400;
				var var_e = 500;
				var var_f = 600;
				
				test_eq("option_var_a", var_a, 100);
				test_eq("option_var_b", var_b, 800); # See below.
				test_eq("option_var_c", var_c, 300);
				test_eq("option_var_d", var_d, 400);
				test_eq("option_var_e", var_e, 500);
				test_eq("option_var_f", var_f, 600);
				test_eq("option_counter", counter, 5);
				test_eq("option_mul_counter", mul_counter, 50);
				
				test_eq("option_const_max", MAX, 10);
				test_eq("option_const_magic", MAGIC, 5);
				
				# Variables declared in an option's menu scope are as copied by
				# value when the option is reached at runtime, but variables
				# declared outside of the scope are not.
				var_b = var_b + counter + mul_counter; # Should be 800 + 5 + 50.
			}
			
			var dummy_f = 666;
			var dummy_g = 777;
			
			option "Fail test" {
				var dummy_h = 888;
				
				test_eq("test_failer_b", 1, 0);
			}
			
			test_eq("post_option_counter", counter, 5);
			test_eq("post_option_mul_counter", mul_counter, 50);
		}
	}
	
	var_b = 800; # This gives us the 800 value from before.
	
	test_eq("menu_counter", counter, 10);
}

test_eq("post_var_a", var_a, 100);
test_eq("post_var_b", var_b, 855);
test_eq("post_var_c", var_c, 300);

var my_var = 1337;

menu {
	option "Test 2" {
	}
}

test_eq("final_test", my_var, 1337);

unfreeze();
hide();
